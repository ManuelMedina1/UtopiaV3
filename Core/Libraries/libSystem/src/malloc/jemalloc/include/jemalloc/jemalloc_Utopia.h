/*
 * Override settings that were generated by jemalloc  
 */

#undef JEMALLOC_BACKGROUND_THREAD

/*
 * Architecture dependant 
 */
#undef JEMALLOC_TLS_MODEL
#undef LG_PAGE
#undef LG_VADDR
#undef LG_SIZEOF_STR
#undef LG_SIZEOF_LONG
#undef LG_SIZEOF_INTMAX_T

#ifdef __amd64__
#define LG_VADDR 48
#define LG_SIZEOF_PTR 3
#define JEMALLOC_TLS_MODEL __attribute__((tls_model("initial-exec"))) /* Does this conflict with Mach-O in any shape or form?" */
#endif

#if LG_VADDR > 32
#define JEMALLOC_RETAIN
#endif

#ifndef JEMALLOC_TLS_MODEL
#define JEMALLOC_TLS_MODEL
#endif

#define LG_PAGE PAGE_SHIFT
#define LG_SIZEOF_INT 2
#define LG_SIZEOF_LONG LG_SIZEOF_PTR
#define LG_SIZEOF_INTMAX_T 3

/* Mangling */
#undef je_malloc
#undef je_calloc
#undef je_posix_memalign
#undef je_aligned_alloc
#undef je_realloc
#undef je_free
#undef je_malloc_usable_size
#undef je_mallocx
#undef je_rallocx
#undef je_xallocx
#undef je_sallocx
#undef je_dallocx
#undef je_sdallocx
#undef je_nallocx
#undef je_mallctl
#undef je_mallctlnametomib
#undef je_mallctlbymib
#undef je_malloc_stats_print
#undef je_allocm
#undef je_rallocm
#undef je_sallocm
#undef je_dallocm
#undef je_nallocm
#define je_malloc __malloc
#define je_calloc __calloc
#define je_posix_memalign __posix_memalign
#define je_aligned_alloc __aligned_alloc
#define je_realloc __realloc
#define je_free __free
#define je_malloc_usable_size __malloc_usable_size
#define je_mallocx __mallocx
#define je_rallocx __rallocx
#define je_xallocx __xallocx
#define je_sallocx __sallocx
#define je_dallocx __dallocx
#define je_sdallocx __sdallocx  
#define je_nallocx __nallocx
#define je_mallctl __mallctl

#ifdef JEMALLOC_C_
__weak_alias(__malloc, c_std_malloc);
__weak_alias(__calloc, c_std_calloc);
__weak_alias(__posix_memalign, c_posix_memalign);
__weak_alias(__aligned_alloc, c_std_aligned_alloc);
__weak_alias(__realloc, c_std_realloc);
__weak_alias(__free, c_std_free);
__weak_alias(__malloc_usable_size, c_std_malloc_usable_size);
__weak_alias(__mallocx, c_std_mallocx);
__weak_alias(__reallocx, c_std_reallocx);
__weak_alias(__xallocx, c_std_xallocx);
__weak_alias(__sallocx, c_std_sallocx);
__weak_alias(__dallocx, c_std_dallocx);
__weak_alias(__sdallocx, c_std_sdallocx);
__weak_alias(__nallocx, c_std_nallocx);
__weak_alias(__mallctl, c_std_mallctl);
#endif