/*
 * SPDX-License-Identifier: BSD-2-Clause
 *
 * Copyright (c) 2022 Diego Magdaleno
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $Utopia$
 */


/* 
 * The following code describes the syscall unique number definitions
 * it isn't made for direct importing but rather generation of the 
 * syscall interface 
 * 
 * Due to the way Utopia was designed, and it's kernel being derived from
 * Linux and Mach (While acquiring some parts of the BSD operating system)
 * the following nomenclature was established for generation:
 * 
 * LNX_name - Linux routine syscalls, positive integers
 * MCH_name - Mach routine syscalls, negative integers
 * BSD_name - BSD routine syscalls, positive integers
 *
*/



/* LINUX SYSCALL INTERFACE */
#define __LNX_read				0
#define __LNX_write				1
#define __LNX_open				2
#define __LNX_close				3
#define __LNX_stat				4
#define __LNX_fstat				5
#define __LNX_lstat				6
#define __LNX_poll				7
#define __LNX_lseek				8
#define __LNX_mmap				9
#define __LNX_mprotect			10
#define __LNX_munmap				11
#define __LNX_brk				12
#define __LNX_rt_sigaction		13
#define __LNX_rt_sigprocmask		14
#define __LNX_rt_sigreturn		15
#define __LNX_ioctl				16
#define __LNX_pread64			17
#define __LNX_pwrite64			18
#define __LNX_readv				19
#define __LNX_writev				20
#define __LNX_access				21
#define __LNX_pipe				22
#define __LNX_select				23
#define __LNX_sched_yield		24
#define __LNX_mremap				25
#define __LNX_msync				26
#define __LNX_mincore			27
#define __LNX_madvise			28
#define __LNX_shmget				29
#define __LNX_shmat				30
#define __LNX_shmctl				31
#define __LNX_dup				32
#define __LNX_dup2				33
#define __LNX_pause				34
#define __LNX_nanosleep			35
#define __LNX_getitimer			36
#define __LNX_alarm				37
#define __LNX_setitimer			38
#define __LNX_getpid				39
#define __LNX_sendfile			40
#define __LNX_socket				41
#define __LNX_connect			42
#define __LNX_accept				43
#define __LNX_sendto				44
#define __LNX_recvfrom			45
#define __LNX_sendmsg			46
#define __LNX_recvmsg			47
#define __LNX_shutdown			48
#define __LNX_bind				49
#define __LNX_listen				50
#define __LNX_getsockname		51
#define __LNX_getpeername		52
#define __LNX_socketpair			53
#define __LNX_setsockopt			54
#define __LNX_getsockopt			55
#define __LNX_clone				56
#define __LNX_fork				57
#define __LNX_vfork				58
#define __LNX_execve				59
#define __LNX_exit				60
#define __LNX_wait4				61
#define __LNX_kill				62
#define __LNX_uname				63
#define __LNX_semget				64
#define __LNX_semop				65
#define __LNX_semctl				66
#define __LNX_shmdt				67
#define __LNX_msgget				68
#define __LNX_msgsnd				69
#define __LNX_msgrcv				70
#define __LNX_msgctl				71
#define __LNX_fcntl				72
#define __LNX_flock				73
#define __LNX_fsync				74
#define __LNX_fdatasync			75
#define __LNX_truncate			76
#define __LNX_ftruncate			77
#define __LNX_getdents			78
#define __LNX_getcwd				79
#define __LNX_chdir				80
#define __LNX_fchdir				81
#define __LNX_rename				82
#define __LNX_mkdir				83
#define __LNX_rmdir				84
#define __LNX_creat				85
#define __LNX_link				86
#define __LNX_unlink				87
#define __LNX_symlink			88
#define __LNX_readlink			89
#define __LNX_chmod				90
#define __LNX_fchmod				91
#define __LNX_chown				92
#define __LNX_fchown				93
#define __LNX_lchown				94
#define __LNX_umask				95
#define __LNX_gettimeofday		96
#define __LNX_getrlimit			97
#define __LNX_getrusage			98
#define __LNX_sysinfo			99
#define __LNX_times				100
#define __LNX_ptrace				101
#define __LNX_getuid				102
#define __LNX_syslog				103
#define __LNX_getgid				104
#define __LNX_setuid				105
#define __LNX_setgid				106
#define __LNX_geteuid			107
#define __LNX_getegid			108
#define __LNX_setpgid			109
#define __LNX_getppid			110
#define __LNX_getpgrp			111
#define __LNX_setsid				112
#define __LNX_setreuid			113
#define __LNX_setregid			114
#define __LNX_getgroups			115
#define __LNX_setgroups			116
#define __LNX_setresuid			117
#define __LNX_getresuid			118
#define __LNX_setresgid			119
#define __LNX_getresgid			120
#define __LNX_getpgid			121
#define __LNX_setfsuid			122
#define __LNX_setfsgid			123
#define __LNX_getsid				124
#define __LNX_capget				125
#define __LNX_capset				126
#define __LNX_rt_sigpending		127
#define __LNX_rt_sigtimedwait	128
#define __LNX_rt_sigqueueinfo	129
#define __LNX_rt_sigsuspend		130
#define __LNX_sigaltstack		131
#define __LNX_utime				132
#define __LNX_mknod				133
#define __LNX_uselib				134
#define __LNX_personality		135
#define __LNX_ustat				136
#define __LNX_statfs				137
#define __LNX_fstatfs			138
#define __LNX_sysfs				139
#define __LNX_getpriority			140
#define __LNX_setpriority			141
#define __LNX_sched_setparam			142
#define __LNX_sched_getparam			143
#define __LNX_sched_setscheduler		144
#define __LNX_sched_getscheduler		145
#define __LNX_sched_get_priority_max	146
#define __LNX_sched_get_priority_min	147
#define __LNX_sched_rr_get_interval	148
#define __LNX_mlock					149
#define __LNX_munlock				150
#define __LNX_mlockall				151
#define __LNX_munlockall				152
#define __LNX_vhangup				153
#define __LNX_modify_ldt				154
#define __LNX_pivot_root				155
#define __LNX__sysctl				156
#define __LNX_prctl					157
#define __LNX_arch_prctl				158
#define __LNX_adjtimex				159
#define __LNX_setrlimit				160
#define __LNX_chroot					161
#define __LNX_sync					162
#define __LNX_acct					163
#define __LNX_settimeofday			164
#define __LNX_mount					165
#define __LNX_umount2				166
#define __LNX_swapon					167
#define __LNX_swapoff				168
#define __LNX_reboot					169
#define __LNX_sethostname			170
#define __LNX_setdomainname			171
#define __LNX_iopl					172
#define __LNX_ioperm					173
#define __LNX_create_module			174
#define __LNX_init_module			175
#define __LNX_delete_module			176
#define __LNX_get_kernel_syms		177
#define __LNX_query_module			178
#define __LNX_quotactl				179
#define __LNX_nfsservctl				180
#define __LNX_getpmsg				181
#define __LNX_putpmsg				182
#define __LNX_afs_syscall			183
#define __LNX_tuxcall				184
#define __LNX_security				185
#define __LNX_gettid					186
#define __LNX_readahead				187
#define __LNX_setxattr				188
#define __LNX_lsetxattr				189
#define __LNX_fsetxattr				190
#define __LNX_getxattr				191
#define __LNX_lgetxattr				192
#define __LNX_fgetxattr				193
#define __LNX_listxattr				194
#define __LNX_llistxattr				195
#define __LNX_flistxattr				196
#define __LNX_removexattr			197
#define __LNX_lremovexattr			198
#define __LNX_fremovexattr			199
#define __LNX_tkill					200
#define __LNX_time					201
#define __LNX_futex					202
#define __LNX_sched_setaffinity		203
#define __LNX_sched_getaffinity		204
#define __LNX_set_thread_area		205
#define __LNX_io_setup				206
#define __LNX_io_destroy				207
#define __LNX_io_getevents			208
#define __LNX_io_submit				209
#define __LNX_io_cancel				210
#define __LNX_get_thread_area		211
#define __LNX_lookup_dcookie			212
#define __LNX_epoll_create			213
#define __LNX_epoll_ctl_old			214
#define __LNX_epoll_wait_old			215
#define __LNX_remap_file_pages		216
#define __LNX_getdents64				217
#define __LNX_set_tid_address		218
#define __LNX_restart_syscall		219
#define __LNX_semtimedop				220
#define __LNX_fadvise64				221
#define __LNX_timer_create			222
#define __LNX_timer_settime			223
#define __LNX_timer_gettime			224
#define __LNX_timer_getoverrun		225
#define __LNX_timer_delete			226
#define __LNX_clock_settime			227
#define __LNX_clock_gettime			228
#define __LNX_clock_getres			229
#define __LNX_clock_nanosleep		230
#define __LNX_exit_group				231
#define __LNX_epoll_wait				232
#define __LNX_epoll_ctl				233
#define __LNX_tgkill					234
#define __LNX_utimes					235
#define __LNX_vserver				236
#define __LNX_mbind					237
#define __LNX_set_mempolicy			238
#define __LNX_get_mempolicy			239
#define __LNX_mq_open				240
#define __LNX_mq_unlink				241
#define __LNX_mq_timedsend			242
#define __LNX_mq_timedreceive		243
#define __LNX_mq_notify				244
#define __LNX_mq_getsetattr			245
#define __LNX_kexec_load				246
#define __LNX_waitid					247
#define __LNX_add_key				248
#define __LNX_request_key			249
#define __LNX_keyctl					250
#define __LNX_ioprio_set				251
#define __LNX_ioprio_get				252
#define __LNX_inotify_init			253
#define __LNX_inotify_add_watch		254
#define __LNX_inotify_rm_watch		255
#define __LNX_migrate_pages			256
#define __LNX_openat					257
#define __LNX_mkdirat				258
#define __LNX_mknodat				259
#define __LNX_fchownat				260
#define __LNX_futimesat				261
#define __LNX_newfstatat				262
#define __LNX_unlinkat				263
#define __LNX_renameat				264
#define __LNX_linkat					265
#define __LNX_symlinkat				266
#define __LNX_readlinkat				267
#define __LNX_fchmodat				268
#define __LNX_faccessat				269
#define __LNX_pselect6				270
#define __LNX_ppoll					271
#define __LNX_unshare				272
#define __LNX_set_robust_list		273
#define __LNX_get_robust_list		274
#define __LNX_splice					275
#define __LNX_tee					276
#define __LNX_sync_file_range		277
#define __LNX_vmsplice				278
#define __LNX_move_pages				279
#define __LNX_utimensat				280
#define __LNX_epoll_pwait			281
#define __LNX_signalfd				282
#define __LNX_timerfd_create			283
#define __LNX_eventfd				284
#define __LNX_fallocate				285
#define __LNX_timerfd_settime		286
#define __LNX_timerfd_gettime		287
#define __LNX_accept4				288
#define __LNX_signalfd4				289
#define __LNX_eventfd2				290
#define __LNX_epoll_create1			291
#define __LNX_dup3					292
#define __LNX_pipe2					293
#define __LNX_inotify_init1			294
#define __LNX_preadv					295
#define __LNX_pwritev				296
#define __LNX_rt_tgsigqueueinfo		297
#define __LNX_perf_event_open		298
#define __LNX_recvmmsg				299
#define __LNX_fanotify_init			300
#define __LNX_fanotify_mark			301
#define __LNX_prlimit64				302
#define __LNX_name_to_handle_at			303
#define __LNX_open_by_handle_at			304
#define __LNX_clock_adjtime			305
#define __LNX_syncfs				306
#define __LNX_sendmmsg				307
#define __LNX_setns				308
#define __LNX_getcpu				309
#define __LNX_process_vm_readv			310
#define __LNX_process_vm_writev			311
#define __LNX_kcmp				312
#define __LNX_finit_module			313
#define __LNX_sched_setattr			314
#define __LNX_sched_getattr			315
#define __LNX_renameat2				316
#define __LNX_seccomp				317
#define __LNX_getrandom				318
#define __LNX_memfd_create			319
#define __LNX_kexec_file_load			320
#define __LNX_bpf				321
#define __LNX_execveat				322
#define __LNX_userfaultfd			323
#define __LNX_membarrier				324
#define __LNX_mlock2				325
#define __LNX_copy_file_range			326
#define __LNX_preadv2				327
#define __LNX_pwritev2				328
#define __LNX_pkey_mprotect			329
#define __LNX_pkey_alloc				330
#define __LNX_pkey_free				331
#define __LNX_statx				332
#define __LNX_io_pgetevents			333
#define __LNX_rseq				334
#define __LNX_pidfd_send_signal			424
#define __LNX_io_uring_setup			425
#define __LNX_io_uring_enter			426
#define __LNX_io_uring_register			427
#define __LNX_open_tree		428
#define __LNX_move_mount		429
#define __LNX_fsopen		430
#define __LNX_fsconfig		431
#define __LNX_fsmount		432
#define __LNX_fspick		433
#define __LNX_pidfd_open		434
#define __LNX_clone3		435
#define __LNX_close_range	436
#define __LNX_openat2		437
#define __LNX_pidfd_getfd	438
#define __LNX_faccessat2		439

